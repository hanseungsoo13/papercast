openapi: 3.0.3
info:
  title: Paper Viewer API Contracts
  description: API contracts for enhanced paper viewing functionality
  version: 1.0.0
  contact:
    name: PaperCast Team
    
paths:
  /api/papers/{paperId}/metadata:
    get:
      summary: Get enhanced paper metadata
      description: Retrieve detailed metadata for a specific paper including embed support and thumbnails
      parameters:
        - name: paperId
          in: path
          required: true
          schema:
            type: string
          description: Unique paper identifier
      responses:
        '200':
          description: Paper metadata retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnhancedPaper'
        '404':
          description: Paper not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
  /api/papers/{paperId}/embed-check:
    get:
      summary: Check if paper supports iframe embedding
      description: Verify whether a paper can be embedded in an iframe
      parameters:
        - name: paperId
          in: path
          required: true
          schema:
            type: string
          description: Unique paper identifier
      responses:
        '200':
          description: Embed support status
          content:
            application/json:
              schema:
                type: object
                properties:
                  paperId:
                    type: string
                  embedSupported:
                    type: boolean
                  reason:
                    type: string
                    description: Reason if embedding is not supported
                  checkedAt:
                    type: string
                    format: date-time

components:
  schemas:
    EnhancedPaper:
      type: object
      required:
        - id
        - title
        - authors
        - abstract
        - url
        - collected_at
      properties:
        id:
          type: string
          description: Unique paper identifier
          example: "2401.12345"
        title:
          type: string
          maxLength: 500
          description: Paper title
          example: "Efficient Transformers with Dynamic Attention"
        authors:
          type: array
          items:
            type: string
          minItems: 1
          description: List of paper authors
          example: ["John Doe", "Jane Smith"]
        abstract:
          type: string
          maxLength: 5000
          description: Paper abstract
          example: "We propose a novel approach to..."
        url:
          type: string
          format: uri
          description: Paper URL on Hugging Face
          example: "https://huggingface.co/papers/2401.12345"
        published_date:
          type: string
          format: date
          description: Publication date
          example: "2025-10-24"
        upvotes:
          type: integer
          minimum: 0
          description: Number of upvotes
          example: 142
        summary:
          type: string
          maxLength: 1000
          description: AI-generated summary
          example: "이 논문은 동적 어텐션을 사용하여..."
        collected_at:
          type: string
          format: date-time
          description: Collection timestamp
          example: "2025-10-24T06:00:00Z"
        arxiv_id:
          type: string
          description: ArXiv paper ID if available
          example: "2401.12345"
        categories:
          type: array
          items:
            type: string
            maxLength: 50
          description: Paper categories/tags
          example: ["Machine Learning", "Natural Language Processing"]
        thumbnail_url:
          type: string
          format: uri
          description: Paper thumbnail image URL
          example: "https://huggingface.co/papers/2401.12345/thumbnail.png"
        embed_supported:
          type: boolean
          description: Whether iframe embedding is supported
          example: true
        view_count:
          type: integer
          minimum: 0
          description: View count on Hugging Face
          example: 1250
          
    Error:
      type: object
      required:
        - error
        - message
      properties:
        error:
          type: string
          description: Error code
        message:
          type: string
          description: Human-readable error message
        details:
          type: object
          description: Additional error details
          
  responses:
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
            
    ServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
